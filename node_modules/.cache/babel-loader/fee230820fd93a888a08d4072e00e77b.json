{"ast":null,"code":"var _jsxFileName = \"G:\\\\WSN-7semest\\\\Podstawy projektowania stron\\\\react-project\\\\src\\\\weather\\\\Weather.js\";\nimport React, { Component } from 'react';\nimport Form from './Form';\nimport Result from './Result';\nimport './weather-css.css';\nconst time = new Date().toLocaleString();\n\nclass Weather extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: '',\n      date: '',\n      sunRise: '',\n      sunSet: '',\n      temp: '',\n      presure: '',\n      city: '',\n      wind: '',\n      err: ''\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.handleCitySummit = e => {\n      e.preventDefault();\n      const API_KEY = 'aef4f1132c6ed3740261b23ab43cd9b1';\n      const API = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=${API_KEY}&units=metric`;\n      fetch(API).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Nie udalo sie\");\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n        this.setState(prevState => ({\n          err: false,\n          date: time,\n          sunRise: data.sys.sunrise,\n          sunSet: data.sys.sunset,\n          temp: data.main.temp,\n          presure: data.main.pressure,\n          city: prevState.value,\n          /// data.name\n          wind: data.wind.speed\n        }));\n      }).catch(err => {\n        this.setState(prev => ({\n          err: true,\n          city: prev.value\n        }));\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Form, {\n      value: this.state.value,\n      change: this.handleInputChange,\n      submit: this.handleCitySummit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Result, {\n      weather: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Weather;","map":{"version":3,"sources":["G:/WSN-7semest/Podstawy projektowania stron/react-project/src/weather/Weather.js"],"names":["React","Component","Form","Result","time","Date","toLocaleString","Weather","state","value","date","sunRise","sunSet","temp","presure","city","wind","err","handleInputChange","e","setState","target","handleCitySummit","preventDefault","API_KEY","API","fetch","then","response","ok","Error","json","data","console","log","prevState","sys","sunrise","sunset","main","pressure","speed","catch","prev","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Form from './Form'\r\nimport Result from './Result'\r\nimport './weather-css.css'\r\nconst time = new Date().toLocaleString()\r\nclass Weather extends Component {\r\n    state = {\r\n        value: '',\r\n        date: '',\r\n        sunRise: '',\r\n        sunSet: '',\r\n        temp: '',\r\n        presure: '',\r\n        city: '',\r\n        wind: '',\r\n        err: ''\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        this.setState({\r\n            value: e.target.value\r\n        })\r\n    }\r\n\r\n    handleCitySummit = (e) => {\r\n        e.preventDefault();\r\n        const API_KEY = 'aef4f1132c6ed3740261b23ab43cd9b1'\r\n        const API = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=${API_KEY}&units=metric`\r\n\r\n        fetch(API)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response\r\n                }\r\n                throw Error(\"Nie udalo sie\")\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                this.setState(prevState => ({\r\n                    err: false,\r\n                    date: time,\r\n                    sunRise: data.sys.sunrise,\r\n                    sunSet: data.sys.sunset,\r\n                    temp: data.main.temp,\r\n                    presure: data.main.pressure,\r\n                    city: prevState.value, /// data.name\r\n                    wind: data.wind.speed,\r\n                }))\r\n            })\r\n            .catch(err => {\r\n                this.setState(prev => ({\r\n                    err: true,\r\n                    city: prev.value\r\n                }))\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-form\">\r\n                <Form value={this.state.value}\r\n                    change={this.handleInputChange}\r\n                    submit={this.handleCitySummit}\r\n                />\r\n                <Result weather={this.state} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Weather;\r\n"]},"metadata":{},"sourceType":"module"}